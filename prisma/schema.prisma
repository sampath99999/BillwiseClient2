generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    username   String   @unique
    password   String
    name       String
    network    Network  @relation(fields: [network_id], references: [id])
    network_id Int
    status     Boolean
}

model Network {
    id         Int       @id @default(autoincrement())
    created_at DateTime  @default(now())
    updated_at DateTime  @updatedAt
    name       String
    address    String?
    status     Boolean   @default(false)
    users      User[]
    Packages   Package[]
    Villages   Village[]
    Streets    Street[]
}

model Package {
    id         Int         @id @default(autoincrement())
    created_at DateTime    @default(now())
    updated_at DateTime    @updatedAt
    name       String
    price      Float
    type       PackageType @default(CHANNEL)
    status     Boolean     @default(true)
    network    Network     @relation(fields: [network_id], references: [id])
    network_id Int

    @@unique([network_id, name])
}

model Village {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    name       String
    shortcode  String
    network    Network  @relation(fields: [network_id], references: [id])
    network_id Int
    Streets    Street[]
}

model Street {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    village    Village  @relation(fields: [village_id], references: [id])
    village_id Int
    network    Network  @relation(fields: [network_id], references: [id])
    network_id Int
    name       String
}

enum PackageType {
    CHANNEL
    PACKAGE
}

model log {
    id Int @id @default(autoincrement())
}
